---

- name: Set the Global PATH
  when: server_extra_path != ''
  lineinfile:
    dest=/etc/environment
    state=present
    line="PATH={{ server_extra_path }}:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin"

- name: Set Hostname
  hostname: name="{{ server_hostname }}"

- name: Install Nexcess GPG Key(s)
  rpm_key: key={{ item }} state=present
  with_items: "{{ server_gpgkeys }}"

- name: Install Nexcess YUM Repos
  copy: src={{ item }} dest=/etc/yum.repos.d
  with_items: "{{ server_repos }}"

- name: Install Extras
  yum: name={{ item }} state=latest
  with_items: "{{ server_packages }}"

- name: Turn Off Unused Services
  service: name={{ item }} enabled=no state=stopped
  with_items: "{{ server_services_unused }}"

- name: Bump User File Limits (Hard)
  pam_limits:
    domain=*
    limit_type=hard
    limit_item=nofile
    value={{ server_pam.nofile.hard }}
    use_max=yes

- name: Bump User File Limits (Soft)
  pam_limits:
    domain=*
    limit_type=soft
    limit_item=nofile
    value={{ server_pam.nofile.soft }}
    use_max=yes

- name: Bump User Proc Limits (Hard)
  pam_limits:
    domain=*
    limit_type=hard
    limit_item=nproc
    value={{ server_pam.nproc.hard }}
    use_max=yes

- name: Bump User Proc Limits (Soft)
  pam_limits:
    domain=*
    limit_type=soft
    limit_item=nproc
    value={{ server_pam.nproc.soft }}
    use_max=yes

- name: Update Sysctl (net.core.somaxconn)
  sysctl:
    name=net.core.somaxconn
    value={{ server_sysctl.net_core_somaxconn }}
    state=present
    ignoreerrors=yes

- name: Update Sysctl (net.ipv4.ip_local_port_range)
  sysctl:
    name=net.ipv4.ip_local_port_range
    value={{ server_sysctl.net_ipv4_ip_local_port_range }}
    state=present
    ignoreerrors=yes

- name: Update Sysctl (net.ipv4.tcp_tw_recycle)
  sysctl:
    name=net.ipv4.tcp_tw_recycle
    value=1
    state=present
    ignoreerrors=yes
    reload=yes

- name: Update Sysctl (fs.file-max)
  sysctl:
    name=fs.file-max
    value={{ server_sysctl.fs_file_max }}
    state=present
    ignoreerrors=yes
    reload=yes

- name: Install PIP
  easy_install: name=pip state=latest

- name: Make Sure SSH Known Hosts Exists
  file: "path={{ server_ssh_known_hosts_file }} state=touch"

- name: Scan For Known Hosts (locally)
  shell: "ssh-keygen -f {{ server_ssh_known_hosts_file }} -F {{ item }}"
  with_items: server_ssh_known_hosts
  register: ssh_known_host_results
  ignore_errors: yes

- name: Update Known Hosts
  shell: "{{ server_ssh_known_hosts_command }} {{ item.item }} >> {{ server_ssh_known_hosts_file }}"
  with_items: ssh_known_host_results.results
  when: item.stdout == ""

- name: Update Base System
  command: /bin/true
  notify: server update
